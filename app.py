import streamlit as st
import PyPDF2
from io import BytesIO

def main():
    st.title('Codebase Explainer')

    user_code_input = st.text_area("Paste code here:")
    uploaded_file = st.file_uploader("Upload documentation", type=["pdf"])
    pdf_text = ""

    if uploaded_file:
        with BytesIO(uploaded_file.getvalue()) as file:
            pdf_reader = PyPDF2.PdfReader(file)
            for page in range(len(pdf_reader.pages)):
                pdf_text += pdf_reader.pages[page].extract_text()
                
    if pdf_text:
        st.subheader("Extracted Text from Documentation:")
        st.write(pdf_text)
        
    user_query = st.text_input("I can now answer questions regarding uploaded code")
    
    if st.button('Explain'):
        if user_code_input or pdf_text:
            st.subheader('Your code explained...')
            # We have to integerate LLM-VM here to explain
            explanation = "Placeholder for output generated by Anarchy LLM-VM."
            st.write(explanation)
        else:
            st.warning('Please input some code first.')
    
    if user_query and st.button('Answer'):
        if user_code_input or pdf_text:
            st.subheader('Answer to your question...')
            # We have to integerate LLM-VM here to explain
            answer = "Placeholder for output generated by Anarchy LLM-VM.
            st.write(answer)
        else:
            st.warning('Please input some code first.')

if __name__ == '__main__':
    main()
